Lists:
Good for maintaining an ordered collection of elements that may change over time.
Supports various methods like append(), remove(), pop(), sort(), etc.

Dictionaries:
Ideal for storing and retrieving values via keys.
Supports methods like keys(), values(), items(), get(), etc.

Tuples:
Used when a collection of items should not change.
Slightly more efficient in terms of memory and performance compared to lists.
Can be used as keys in dictionaries if they contain only immutable elements.

Sets:
Best for membership tests, removing duplicates, and mathematical set operations like union, intersection, and difference.
Supports methods like add(), remove(), union(), intersection(), etc.

Strings:
Used for text manipulation.
Supports various string-specific methods like split(), join(), replace(), find(), etc.
Immutable, so any operation that changes a string produces a new string.

Maps (Dictionaries):
The term "map" is often used interchangeably with "dictionary" in Python.
Provide a way to associate keys with values, allowing for efficient data retrieval.

Lambda Functions:
Lambda functions are small anonymous functions defined using the lambda keyword.
Ex:
add = lambda x, y: x + y
print(add(3, 5))  # 8

